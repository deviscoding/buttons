@import "buttons-variables";

// Outline Button Mixin
@mixin btn-transparent-variant($outline: false, $color: $btn-default-color, $color-hover: darken($color, 7.5%), $active-background: rgba($color, .05), $active-border: darken($color, 7.5%)) {
  // Set Border Color
  $border-color: transparent;
  $border-color-hover: transparent;
  $border-color-active: transparent;
  @if $outline {
    $border-color: $color;
    $border-color-hover: $color-hover;
    $border-color-active: $active-border;
  }

  color: $color;
  background-color: transparent;
  border-color: $border-color;

  &:hover {
    color: $color-hover;
    background-color: $active-background;
    border-color: $border-color-hover;
  }

  &.active, .active > & {
    color: $active-border;
    background-color: $active-background;
  }

  &:focus {
    box-shadow: 0 0 0 $btn-focus-width rgba($color, .5);
  }
}

@mixin btn-outline-variant($color, $color-hover: darken($color, 7.5%), $active-background: rgba($color, .05), $active-border: darken($color, 7.5%)) {
  @include btn-transparent-variant(true, $color, $color-hover, $active-background, $active-border);
}

// Material Design Flat Button Mixin
@mixin btn-flat-variant($color, $color-hover: darken($color, 7.5%), $active-background: rgba($color, .05)) {
  @include btn-transparent-variant(false, $color, $color-hover, $active-background, transparent);
}

@function _btn-color($background) {
  @return if(isLight($background), $btn-dark-color, $btn-light-color);
}

// Master Button Variant Mixin (Calls Flat & Outline Button Mixins)
@mixin btn-variant($background, $border, $hover-background: darken($background, 7.5%), $hover-border: darken($border, 10%), $active-background: darken($background, 10%), $active-border: darken($border, 12.5%)) {
  $color: _btn-color($background);
  $active-color: _btn-color($active-background);
  $hover-color: _btn-color($hover-background);

  @if $background != transparent {
    background-color: $background;
    color: $color;
  } @else {
    color: $btn-dark-color;
  }
  @if $btn-border-width > 0 {
    border-color:     $border;
  }
  &:hover {
    @if($background != $hover-background) { background-color: $hover-background; }
    @if($hover-border != $border and $btn-border-width > 0) { border-color: $hover-border; }
    color: $hover-color;
  }
  .active > &, &.active {
    @if($background != $active-background) { background-color: $active-background; }
    @if($active-border != $border and $btn-border-width > 0) { border-color: $active-border; }
    color: $active-color;
  }
  &:focus {
    box-shadow: 0 0 0 $btn-focus-width rgba($active-border, .5);
  }
}

// Button sizes
@mixin button-size($padding-vertical, $padding-horizontal, $font-size, $line-height, $border-radius) {
  padding: $padding-vertical $padding-horizontal;
  font-size: $font-size;
  line-height: $line-height;
  border-radius: $border-radius;
}

@mixin btn-variants() {
  @each $color, $value in $theme-colors {
    .btn-#{$color} {
      @include btn-variant($value, $value);
    }
  }

  @each $color, $value in $theme-colors {
    .btn-outline-#{$color} {
      @include btn-outline-variant($value);
    }
  }


  @each $color, $value in $theme-colors {
    .btn-flat-#{$color} {
      @include btn-flat-variant($value)
    }
  }
}